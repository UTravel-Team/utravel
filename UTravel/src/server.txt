Pasos para Servir las Imágenes con un Servidor Local
1. Configura un Servidor Local
Puedes usar Node.js y Express para servir las imágenes desde tu carpeta PhotoMap.

Crea un archivo server.js en la raíz de tu proyecto:

/////////////////// empieza aquí el archivo ///////////////////

const express = require("express");
const path = require("path");

const app = express();
const PORT = 3001; // Cambia este puerto si es necesario

// Sirve la carpeta PhotoMap como un recurso estático
app.use("/images", express.static(path.join(__dirname, "src/assets/images/PhotoMap")));

app.get("/", (req, res) => {
  res.send("Servidor funcionando para servir imágenes.");
});

app.listen(PORT, () => {
  console.log(`Servidor corriendo en http://localhost:${PORT}`);
});

/////////////////// termina aquí el archivo ///////////////////

1. Ejecuta el servidor con Node.js:

node server.js
Esto hará que los archivos dentro de src/assets/images/PhotoMap sean accesibles a través de http://localhost:3001/images.

2. Accede a las Imágenes desde el Componente Cluster.jsx
En tu componente Cluster.jsx, utiliza las URLs del servidor para acceder a las imágenes.

/////////////////// empieza aquí el archivo ///////////////////

import React from "react";

const Cluster = () => {
  // URLs servidas por el servidor local
  const images = [
    "http://localhost:3001/images/image1.jpeg",
    "http://localhost:3001/images/image2.jpeg",
    "http://localhost:3001/images/image3.jpeg",
    "http://localhost:3001/images/image4.jpeg",
  ];

  return (
    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-100">
      {images.map((src, index) => (
        <img
          key={index}
          src={src}
          alt={`Imagen ${index + 1}`}
          className="rounded-lg shadow-md hover:scale-105 transition-transform duration-300"
        />
      ))}
    </div>
  );
};

export default Cluster;

/////////////////// empieza aquí el archivo ///////////////////

3. Opcional: Automatiza con npm start

Si quieres que el servidor y la aplicación React se ejecuten al mismo tiempo:

Instala concurrently:

npm install concurrently --save-dev
Modifica tu package.json:

/////////////////// empieza aquí el archivo ///////////////////

"scripts": {
  "start": "concurrently \"npm run server\" \"react-scripts start\"",
  "server": "node server.js"
}


/////////////////// termina aquí el archivo ///////////////////

Ahora, al ejecutar npm start, React y tu servidor se iniciarán simultáneamente.

